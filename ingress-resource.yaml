# kind: Service
# apiVersion: v1
# metadata:
#   name: frontend-node-service
# spec:
#   type: NodePort
#   selector:
#     app: frontend
#   ports:
#   - port: 5000
#     targetPort: 80
#     protocol: TCP
#     name: http
# # ---
# # kind: Service
# # apiVersion: v1
# # metadata:
# #   name: backend-node-service
# # spec:
# #   type: NodePort
# #   selector:
# #     app: backend
# #   ports:
# #   - port: 8080
# #     targetPort: 8080
# #     protocol: TCP
# #     name: http
# ---
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: ingress-service
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/ssl-redirect: "false"
# spec:
#   rules:
#   - host: 34.89.236.94.xip.io
#     http:
#       paths:
#       - backend:
#           serviceName: frontend-node-service
#           servicePort: 5000
#         path: /test
#       # paths:
#       # - path: /*
#       #   backend:
#       #     serviceName: frontend-node-service
#       #     servicePort: 5000
#       # - path: /api/*
#       #   backend:
#       #     serviceName: backend-node-service
#       #     servicePort: 8080



kind: Service
apiVersion: v1
metadata:
  name: frontend-node-service
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
  - port: 5000
    targetPort: 80
    protocol: TCP
    name: http
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-resource
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /hello
        backend:
          serviceName: frontend-node-service
          servicePort: 5000